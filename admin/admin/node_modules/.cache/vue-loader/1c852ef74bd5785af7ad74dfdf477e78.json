{"remainingRequest":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_vue-loader@15.10.1@vue-loader\\lib\\index.js??vue-loader-options!E:\\GraduateDesign\\admin\\admin\\src\\views\\modules\\exampaper\\exam.vue?vue&type=style&index=0&id=fc0e447a&lang=scss&scoped=true&","dependencies":[{"path":"E:\\GraduateDesign\\admin\\admin\\src\\views\\modules\\exampaper\\exam.vue","mtime":1683540029246},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_vue-loader@15.10.1@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_sass-loader@8.0.2@sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GraduateDesign\\admin\\admin\\node_modules\\_vue-loader@15.10.1@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWluZXIgewogICAgYm9yZGVyOiAxcHggc29saWQgI2VlZWVlZTsKfQoudGlwLXRleHQgewogICAgZm9udC1zaXplOiAyNHB4OwogICAgY29sb3I6ICNmOTYzMzI7Cn0KLnRvcC1jb250ZW50IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBwYWRkaW5nOiAxMHB4OwogICAgZm9udC1zaXplOiAxOHB4OwogICAgYmFja2dyb3VuZDogIzQwOWVmZjsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogMjBweDsKfQouZGV0YWlsLWNvbnRlbnQgewogICAgcGFkZGluZzogMjBweDsKICAgIGNvbG9yOiAjMzMzMzMzOwouaXRlbS1jb250ZW50IHsKICAgIHBhZGRpbmc6IDIwcHg7Cn0KfQo="},{"version":3,"sources":["exam.vue"],"names":[],"mappings":";AAqVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"exam.vue","sourceRoot":"src/views/modules/exampaper","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"top-content\">\r\n            <div class=\"left-content\">\r\n                当前第\r\n                <span class=\"tip-text\">{{currentIndex+1}}</span> 道题。未答题目：\r\n                <span class=\"tip-text\">{{dataList.length - currentIndex-1}}</span> 道，总题目：\r\n                <span class=\"tip-text\">{{dataList.length}}</span> 道。\r\n            </div>\r\n            <div class=\"right-content\">\r\n                做题剩余时间：\r\n                <span class=\"tip-text\">{{SecondToDate}}</span>\r\n            </div>\r\n            <div class=\"right-content\">\r\n                <el-button type=\"danger\" v-if=\"!isEndFlag\" round @click=\"leaveTap\">结束做题</el-button>\r\n            </div>\r\n        </div>\r\n        <div class=\"detail-content\" v-if=\"!isEndFlag\">\r\n            <div class=\"item-content\">\r\n        <span class=\"label\">\r\n          题目\r\n          (\r\n          <span>{{ruleForm.examquestionValue}}</span>\r\n          )\r\n          ({{ruleForm.examquestionScore}}分)：\r\n        </span>\r\n                <span class=\"content\">{{ruleForm.examquestionName}}</span>\r\n            </div>\r\n            <div\r\n                    v-if=\"(ruleForm.examquestionTypes==1||ruleForm.examquestionTypes==3)&&!isSubmitFlag\"\r\n                    class=\"item-content\"\r\n                    style=\"border-top:1px solid #eeeeee\"\r\n            >\r\n                <span class=\"label\">选择答案：</span>\r\n                <span class=\"content\">\r\n          <el-select v-model=\"answer\">\r\n            <el-option\r\n                    :label=\"item.text\"\r\n                    :value=\"item.code\"\r\n                    v-for=\"(item,index) in options\"\r\n                    v-bind:key=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </span>\r\n            </div>\r\n            <div\r\n                    v-if=\"ruleForm.examquestionTypes==4&&!isSubmitFlag\"\r\n                    class=\"item-content\"\r\n                    style=\"border-top:1px solid #eeeeee\"\r\n            >\r\n                <span class=\"label\">填写答案：</span>\r\n                <span class=\"content\">\r\n          <el-input v-model=\"answer\" style=\"width:300px\" placeholder=\"填写答案\" clearable></el-input>\r\n        </span>\r\n            </div>\r\n            <div\r\n                    v-if=\"ruleForm.examquestionTypes==2&&!isSubmitFlag\"\r\n                    class=\"item-content\"\r\n                    style=\"border-top:1px solid #eeeeee\"\r\n            >\r\n                <span class=\"label\">选择答案：</span>\r\n                <span class=\"content\">\r\n          <el-select v-model=\"answer\" multiple>\r\n            <el-option\r\n                    :label=\"item.text\"\r\n                    :value=\"item.code\"\r\n                    v-for=\"(item,index) in options\"\r\n                    v-bind:key=\"index\"\r\n            ></el-option>\r\n          </el-select>\r\n        </span>\r\n            </div>\r\n            <div v-if=\"isSubmitFlag\" class=\"item-content\" style=\"border-top:1px solid #eeeeee\">\r\n                <span class=\"label\">填写答案：</span>\r\n                <span class=\"content\">{{answer}}</span>\r\n            </div>\r\n            <div v-if=\"isSubmitFlag\" class=\"item-content\" style=\"color:#888888\">\r\n        <span\r\n                class=\"label\"\r\n                style=\"color:red;margin-right:20px\"\r\n        >{{answer==this.ruleForm.examquestionAnswer?'正确':'错误'}}</span>\r\n                <span class=\"label\">解析：</span>\r\n                <span class=\"content\">{{ruleForm.examquestionAnalysis}}</span>\r\n            </div>\r\n            <div class=\"item-content\" style=\"color:#888888\">\r\n                <el-button v-if=\"!isSubmitFlag\" @click=\"submitTap\" type=\"primary\">提交答案</el-button>\r\n                <el-button v-if=\"isSubmitFlag\" @click=\"nextTap\" type=\"success\">下一题</el-button>\r\n            </div>\r\n        </div>\r\n        <div class=\"detail-content\" v-if=\"isEndFlag\">\r\n            <div class=\"item-content\">\r\n        <span class=\"label\">\r\n          做题成绩：\r\n          <span style=\"font-size:24px;font-weight:blod;color:red\">{{this.score}}</span>\r\n        </span>\r\n                <span class=\"content\">分</span>\r\n            </div>\r\n            <div class=\"item-content\" style=\"color:#888888\">\r\n                <el-button @click=\"finishTap\" type=\"primary\">结束做题</el-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                dataList: [],\r\n                // 当前题目\r\n                paper: {},\r\n                // 当前答题下标\r\n                currentIndex: 0,\r\n                ruleForm: {},\r\n                // 倒计时定时器\r\n                inter: null,\r\n                // 倒计时时间\r\n                count: 0,\r\n                // 选项\r\n                options: null,\r\n                // 学生选择答案\r\n                answer: \"\",\r\n                // 是否提交点击下一题\r\n                isSubmitFlag: false,\r\n                // 得分\r\n                score: 0,\r\n                user: {},\r\n                // 做题是否结束\r\n                isEndFlag: false\r\n            };\r\n        },\r\n        computed: {\r\n            SecondToDate: function() {\r\n                var time = this.count;\r\n                if (null != time && \"\" != time) {\r\n                    if (time > 60 && time < 60 * 60) {\r\n                        time =\r\n                                parseInt(time / 60.0) +\r\n                                \"分钟\" +\r\n                                parseInt((parseFloat(time / 60.0) - parseInt(time / 60.0)) * 60) +\r\n                                \"秒\";\r\n                    } else if (time >= 60 * 60 && time < 60 * 60 * 24) {\r\n                        time =\r\n                                parseInt(time / 3600.0) +\r\n                                \"小时\" +\r\n                                parseInt(\r\n                                        (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                ) +\r\n                                \"分钟\" +\r\n                                parseInt(\r\n                                        (parseFloat(\r\n                                                (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                                ) -\r\n                                                parseInt(\r\n                                                        (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                                )) *\r\n                                        60\r\n                                ) +\r\n                                \"秒\";\r\n                    } else if (time >= 60 * 60 * 24) {\r\n                        time =\r\n                                parseInt(time / 3600.0 / 24) +\r\n                                \"天\" +\r\n                                parseInt(\r\n                                        (parseFloat(time / 3600.0 / 24) - parseInt(time / 3600.0 / 24)) *\r\n                                        24\r\n                                ) +\r\n                                \"小时\" +\r\n                                parseInt(\r\n                                        (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                ) +\r\n                                \"分钟\" +\r\n                                parseInt(\r\n                                        (parseFloat(\r\n                                                (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                                ) -\r\n                                                parseInt(\r\n                                                        (parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60\r\n                                                )) *\r\n                                        60\r\n                                ) +\r\n                                \"秒\";\r\n                    } else {\r\n                        time = parseInt(time) + \"秒\";\r\n                    }\r\n                }\r\n                return time;\r\n            }\r\n        },\r\n        destroyed: function() {\r\n            window.clearInterval(this.inter);\r\n        },\r\n        mounted() {\r\n            this.$http({\r\n                url: `${this.$storage.get(\"sessionTable\")}/session`,\r\n                method: \"get\"\r\n            }).then(({ data }) => {\r\n                if (data && data.code === 0) {\r\n                    this.user = data.data;\r\n                } else {\r\n                    this.$message.error(data.msg);\r\n                }\r\n            });\r\n            // 获取 试题\r\n            var params = {\r\n                page: 1,\r\n                limit: 999,\r\n                orderBy: \"examquestion_sequence\",\r\n                exampaperId: this.$route.params.id\r\n            };\r\n            this.$http({\r\n                url: 'examquestion/page',\r\n                method: \"get\",\r\n                params: params\r\n            }).then(({ data }) => {\r\n                if (data && data.code === 0) {\r\n                    this.dataList = data.data.list;\r\n                    this.ruleForm = this.dataList[this.currentIndex];\r\n                    this.options = JSON.parse(this.ruleForm.examquestionOptions);\r\n                } else {\r\n                    this.dataList = [];\r\n                }\r\n                this.dataListLoading = false;\r\n            });\r\n            // 获取题集\r\n            this.$http({\r\n                url: `exampaper/info/${this.$route.params.id}`,\r\n                method: \"get\"\r\n            }).then(({ data }) => {\r\n                if (data && data.code === 0) {\r\n                    this.paper = data.data;\r\n                    if (this.paper.exampaperDate) {\r\n                        this.count = this.paper.exampaperDate*60;\r\n                        if (this.count > 0) {\r\n                            var _this = this;\r\n                            this.inter = window.setInterval(function() {\r\n                                _this.count = _this.count - 1;\r\n                                if (_this.count < 0) {\r\n                                    window.clearInterval(_this.inter);\r\n                                    _this.isEndFlag = true;\r\n                                }\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.$message.error(data.msg);\r\n                }\r\n            });\r\n        },\r\n        methods: {\r\n            leaveTap() {\r\n                this.$confirm(`确定离开做题?未答题目按0分计算`, \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\"\r\n                }).then(() => {\r\n                    this.isEndFlag = true;\r\n                });\r\n\r\n\r\n                let record = {\r\n                    exampaperId: this.$route.params.id,\r\n                    examredetailsUuidNumber: this.$route.params.paperUUID,\r\n                };\r\n                this.$http({\r\n                    url: `examredetails/addUnsaved`,\r\n                    method: \"get\",\r\n                    params: record\r\n                }).then(({ data }) => {\r\n                });\r\n            },\r\n            finishTap() {\r\n                this.$router.go(-1);\r\n            },\r\n            submitTap() {\r\n                let myscore = 0;\r\n                if (this.ruleForm.examquestionTypes == 2) {\r\n                    this.answer = this.answer.join(\",\");\r\n                }\r\n                this.isSubmitFlag = true;\r\n                let defen = 0\r\n                if (this.answer == this.ruleForm.examquestionAnswer) {\r\n                    this.score = Number(this.score) +Number(this.ruleForm.examquestionScore) ;\r\n                    myscore = this.ruleForm.examquestionScore;\r\n                    defen = this.ruleForm.examquestionScore;\r\n                }\r\n                // 保存答题记录\r\n                let record = {\r\n                    examredetailsUuidNumber: this.$route.params.paperUUID,\r\n                    examquestionId: this.ruleForm.id,\r\n                    examquestionName: this.ruleForm.examquestionName,\r\n                    examredetailsMyscore: defen,\r\n                    examredetailsMyanswer: this.answer,\r\n                    yonghuId: this.user.id,\r\n                };\r\n                this.$http({\r\n                    url: `examredetails/saveExamredetails?examrecordId=`+this.$route.params.examrecordId,\r\n                    method: \"post\",\r\n                    data: record\r\n                }).then(({ data }) => {\r\n                });\r\n            },\r\n            nextTap() {\r\n                if (this.currentIndex == this.dataList.length - 1) {\r\n                    this.isEndFlag = true;\r\n                } else {\r\n                    this.currentIndex = this.currentIndex + 1;\r\n                    this.ruleForm = this.dataList[this.currentIndex];\r\n                    this.options = JSON.parse(this.ruleForm.examquestionOptions);\r\n                    this.isSubmitFlag = false;\r\n                }\r\n                this.answer = null\r\n            }\r\n        }\r\n    };\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    .container {\r\n        border: 1px solid #eeeeee;\r\n    }\r\n    .tip-text {\r\n        font-size: 24px;\r\n        color: #f96332;\r\n    }\r\n    .top-content {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        padding: 10px;\r\n        font-size: 18px;\r\n        background: #409eff;\r\n        color: #ffffff;\r\n        border-radius: 20px;\r\n    }\r\n    .detail-content {\r\n        padding: 20px;\r\n        color: #333333;\r\n    .item-content {\r\n        padding: 20px;\r\n    }\r\n    }\r\n</style>\r\n"]}]}